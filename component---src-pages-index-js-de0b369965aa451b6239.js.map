{"version":3,"sources":["webpack:///./src/Components/featured.js","webpack:///./src/Components/recentPosts.js","webpack:///./src/pages/index.js"],"names":["Featured","data","className","to","node","frontmatter","slug","fluid","featuredImage","childImageSharp","alt","title","postedAt","dangerouslySetInnerHTML","__html","snippet","PopularPosts","props","onChange","e","onPostClick","currentTarget","getAttribute","id","allMdx","edges","map","item","index","key","onClick","onKeyDown","data-key","style","width","height","query","Home","useState","featuredIndex","state","setstate","window","scrollTo","top","left","behavior"],"mappings":"8MA0BeA,EAtBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACZ,yBAAKC,UAAU,aACX,yBAAKA,UAAU,iBACX,kBAAC,OAAD,CAAMC,GAAE,UAAYF,EAAKG,KAAKC,YAAYC,MACtC,kBAAC,IAAD,CACAC,MAAON,EAAKG,KAAKC,YAAYG,cAAcC,gBAAgBF,MAC3DG,IAAKT,EAAKG,KAAKC,YAAYM,MAC3BT,UAAU,YAIlB,yBAAKA,UAAU,gBAEX,4BAAKD,EAAKG,KAAKC,YAAYM,OAE3B,4CAAkBV,EAAKG,KAAKC,YAAYO,UACxC,yBAAKC,wBAAyB,CAACC,OAASb,EAAKG,KAAKC,YAAYU,WAC9D,kBAAC,OAAD,CAAMZ,GAAE,UAAYF,EAAKG,KAAKC,YAAYC,KAAOJ,UAAU,UAA3D,gBCgBGc,G,UAlCY,SAACC,GACxB,IAAMC,EAAS,SAACC,GACZF,EAAMG,YAAYD,EAAEE,cAAcC,aAAa,cAGnD,OACI,yBAAKpB,UAAU,gBACX,4CACA,6BACA,wBAAIqB,GAAG,WACFN,EAAMhB,KAAKuB,OAAOC,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACzB,wBAAIC,IAAG,GAAKD,EAASE,QAASZ,EAAUa,UAAWb,EAAUc,WAAA,GAAaJ,GACtE,kBAAC,IAAD,CACArB,MAAOoB,EAAKvB,KAAKC,YAAYG,cAAcC,gBAAgBF,MAC3DG,IAAKiB,EAAKvB,KAAKC,YAAYM,MAC3BT,UAAU,wBACV+B,MAAO,CAAC,UAAY,QAASC,MAAO,OAAQC,OAAO,QACnDH,WAAA,GAAaJ,IAEb,yBAAK1B,UAAU,UACX,yBAAKA,UAAU,QACX,2BAAIyB,EAAKvB,KAAKC,YAAYO,iBAM9C,6BACA,yBAAKV,UAAU,UAAS,kBAAC,OAAD,CAAMC,GAAG,UAAT,iB,YCmC7B,IAAMiC,EAAK,aA2BHC,UAnFf,YAAuB,IAAPpC,EAAM,EAANA,KAAM,EACMqC,mBAAS,CACjCC,cAAc,IADTC,EADa,KACNC,EADM,KAgBpB,OACE,oCACA,kBAAC,IAAD,MACE,kBAAC,IAAD,MACF,8BACE,yBAAKvC,UAAU,YACb,kBAAC,EAAD,CAAUD,KAAMA,EAAKuB,OAAOC,MAAMe,EAAMD,kBAE1C,kBAAC,EAAD,CAAatC,KAAMA,EAAMmB,YApBV,SAACD,GAClBsB,EAAS,CACPF,cAAepB,IAEjBuB,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU","file":"component---src-pages-index-js-de0b369965aa451b6239.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'gatsby'\r\nimport Image from \"gatsby-image\"\r\n\r\nconst Featured =({ data })=>(\r\n    <div className=\"container\">\r\n        <div className=\"featuredImage\">\r\n            <Link to={`/blogs/${data.node.frontmatter.slug}`}>\r\n                <Image\r\n                fluid={data.node.frontmatter.featuredImage.childImageSharp.fluid}\r\n                alt={data.node.frontmatter.title}\r\n                className=\"image\"\r\n                />    \r\n            </Link>\r\n        </div>\r\n        <div className=\"featuredText\">\r\n            \r\n            <h2>{data.node.frontmatter.title}</h2>\r\n\r\n            <time>Posted At: {data.node.frontmatter.postedAt}</time>\r\n            <div dangerouslySetInnerHTML={{__html : data.node.frontmatter.snippet}}/>\r\n            <Link to={`/blogs/${data.node.frontmatter.slug}`}className=\"purple\">Read More</Link>    \r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Featured\r\n","import React from 'react'\r\nimport Image from 'gatsby-image'\r\nimport { Link } from 'gatsby';\r\nexport const PopularPosts =(props)=> {\r\n    const onChange=(e)=>{\r\n        props.onPostClick(e.currentTarget.getAttribute('data-key')); \r\n    }\r\n    \r\n    return (\r\n        <div className=\"popularPosts\">\r\n            <h3>Recent Posts</h3>\r\n            <hr/>\r\n            <ul id=\"popular\">\r\n                {props.data.allMdx.edges.map((item, index)=>(\r\n                    <li key={`${index}`} onClick={onChange} onKeyDown={onChange} data-key={`${index}`}>\r\n                        <Image\r\n                        fluid={item.node.frontmatter.featuredImage.childImageSharp.fluid}\r\n                        alt={item.node.frontmatter.title}\r\n                        className=\"image recentPostImage\"\r\n                        style={{'objectFit':'cover', width: '100%', height:'100%',}}\r\n                        data-key={`${index}`}\r\n                        />\r\n                        <div className=\"middle\">\r\n                            <div className=\"text\">\r\n                                <p>{item.node.frontmatter.postedAt}</p>\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <hr/>\r\n            <div className=\"center\"><Link to=\"/posts\">All Posts</Link></div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default PopularPosts\r\n","import React, {useState} from \"react\"\r\nimport Navigation from \"../Components/navigation\"\r\nimport Featured from \"../Components/featured\"\r\nimport '../Components/styles.scss'\r\nimport RecentPosts from \"../Components/recentPosts\"\r\nimport PropTypes from \"prop-types\"\r\nimport { graphql } from 'gatsby'\r\nimport Metadata from \"../Components/metadata\"\r\n\r\n\r\nfunction Home ({data}){\r\n  const [state, setstate] = useState({\r\n    featuredIndex:0,\r\n  })\r\n  const onPostClick =(e)=>{\r\n    setstate({\r\n      featuredIndex: e\r\n    })\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    });\r\n  }\r\n\r\n  \r\n  return (\r\n    <>\r\n    <Metadata/>\r\n      <Navigation/>\r\n    <main>\r\n      <div className=\"featured\">\r\n        <Featured data={data.allMdx.edges[state.featuredIndex]}></Featured>\r\n      </div>\r\n      <RecentPosts data={data} onPostClick={onPostClick}/>\r\n\r\n    </main>\r\n    </>\r\n  )  \r\n  \r\n}\r\nHome.propTypes ={\r\n  data: PropTypes.object.isRequired,\r\n}\r\n\r\n// export const query = graphql`\r\n// // query{\r\n// //   allBlogInfoJson(limit: 4) {\r\n// //     edges {\r\n// //       node {\r\n// //         description\r\n// //         slug\r\n// //         title\r\n// //         postedAt\r\n// //         image {\r\n// //           childImageSharp {\r\n// //             fluid(quality: 60) {\r\n// //               ...GatsbyImageSharpFluid\r\n// //             }\r\n// //           }\r\n// //         }\r\n// //       }\r\n// //     }\r\n// //   }\r\n// // }\r\n// // `;\r\nexport const query = graphql`\r\n  query{\r\n        allMdx(limit: 4, sort: {\r\n          fields: [frontmatter___Date]\r\n          order: DESC\r\n        }) {\r\n          edges {\r\n            node {\r\n              frontmatter {\r\n                slug\r\n                title\r\n                postedAt\r\n                snippet\r\n                featuredImage {\r\n                    childImageSharp {\r\n                      fluid(maxWidth: 800) {\r\n                        ...GatsbyImageSharpFluid\r\n                      }\r\n                    }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      \r\n  }\r\n`;\r\nexport default Home"],"sourceRoot":""}